<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhEAAQALMJABtqor7X6aTD2kmItXamx1+WvjF5q7rS44200P///wAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEAAAAh+QQFCgAJACwAAAAAEAAQAAAELTDJmUKgmFqbJ98Xp21VSHqnBGLi
        6Haq2bJgSn8XXL58PK8oXGm2WxFHx04yAgAh+QQFCgAJACwAAAAAEAAQAAAESDDJmQihmFqbJ0LVlhQF
        9n3hSJbeSa1sm5GUIHTTMCS2jeu63q0D3PlwCR3lcMgYDBgmk/J8LqUJACBRhV6z2q0VF94iJ9pOBAAh
        +QQFCgAJACwAAAAAEAAQAAAESDDJmRCimFqbpxDVlhAE9n3hSJbeSa1sm5HUcXRTUSS2jeu63q0D3Plw
        CR0FAMgMBhgmk/J8LqUJgyFRhV6z2q0VF94iJ9pOBAAh+QQFCgAJACwAAAAAEAAQAAAESDDJmYSgmFqb
        5znVliAI9n3hSJbeSa1sm5EUAHQTQSS2jeu63q0D3PlwCR3FYMgUChgmk/J8LqWJwSBRhV6z2q0VF94i
        J9pOBAAh+QQFCgAJACwAAAAAEAAQAAAESDDJmc6hmFqbJwDVlggC9n3hSJbeSa1sm5GUYXQTgiS2jeu6
        3q0D3PlwCR1lMMgQCBgmk/J8LqWJQiFRhV6z2q0VF94iJ9pOBAAh+QQFCgAJACwAAAAAEAAQAAAESDDJ
        mQCgmFqbpzHVlhwH9n3hSJbeSa1sm5HUMHSTICS2jeu63q0D3PlwCR2lUMggEBgmk/J8LqUJAiFRhV6z
        2q0VF94iJ9pOBAAh+QQFCgAJACwAAAAAEAAQAAAESDDJmYyhmFqb5xjVlgAA9n3hSJbeSa1sm5FUUXTT
        cSS2jeu63q0D3PlwCR2FQMgIBBgmk/J8LqUJBCJRhV6z2q0VF94iJ9pOBAAh+QQFCgAJACwAAAAAEAAQ
        AAAESDDJmcagmFqbZynVlhgG9n3hSJbeSa1sm5EUQXQTACS2jeu63q0D3PlwCR0FgcgcDhgmk/J8LqUJ
        gSBRhV6z2q0VF94iJ9pOBAAh+QQFCgAJACwAAAAAEAAQAAAESDDJmUqhmFqbJyHVlgwD9n3hSJbeSa1s
        m5EUgnSTYSS2jeu63q0D3PlwCR1FIMgAABgmk/J8LqWJwyFRhV6z2q0VF94iJ9pOBAA7
</value>
  </data>
</root>